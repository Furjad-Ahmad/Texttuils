{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","React","createElement","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","props","concat","mode","Link","to","title","aria-label","aria-current","aboutText","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","filter","element","defaultProps","Alert","style","height","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Router","document","body","backgroundColor","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.402ed4c9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About() {\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n        <h1>About Us</h1>\r\n      <div className=\"accordion mt-5 mb-5\" id=\"accordionExample\">\r\n\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"> Muhammad Furjad Khursheed</button>\r\n          </h2>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate\r\n              clas that we use to style each element. These clas control the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">Muhammad Afaq Khursheed</button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate\r\n              clas that we use to style each element. These clas control the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\"> Muhammad Almas Khursheed </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate\r\n              clas that we use to style each element. These clas control the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      {/* <a className=\"navbar-brand\" href=\"/\">Furjad Ahmad</a> */}\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"about\">{props.aboutText}</Link>\r\n          </li>\r\n        </ul>\r\n        <form className=\"d-flex m-2\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        <div className=\"form-check form-switch\">\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enabble Dark Mode</label>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  );\r\n}\r\n\r\n\r\nNavbar.propTypes = \r\n{\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Afaq Ahmad\",\r\n    aboutText : \"Here We are \"\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState('Enter text Here');\r\n\r\n    const UpClick = () =>{\r\n        let newText = text.toUpperCase(); \r\n        setText(newText);\r\n        props.showAlert('Converted to Uppercase','primary');\r\n    }\r\n\r\n    const LoClick = () =>{\r\n        let newText = text.toLowerCase(); \r\n        setText(newText);\r\n        props.showAlert('Converted to Lowercase','primary');\r\n    }\r\n\r\n    const ClearClick = () =>{\r\n        let newText = ''; \r\n        setText(newText);\r\n        props.showAlert('ClearText Successfully','primary');\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n    <h1 className='text-center mt-3'>{props.heading}</h1>\r\n        <div className=\"container\">\r\n\r\n            <div className=\"mb-3\">\r\n                <textarea value={text} onChange={handleOnChange} className=\"form-control\" id=\"myBox\" rows=\"13\"></textarea>\r\n            </div>\r\n\r\n            <button disabled={text.length===0} type=\"button\" onClick={UpClick} className=\"btn btn-primary m-4\">Convert To Uppercase</button>\r\n            <button disabled={text.length===0} type=\"button\" onClick={LoClick} className=\"btn btn-primary  m-4\">Convert To Lowercase</button>       \r\n            <button disabled={text.length===0} type=\"button\" onClick={ClearClick} className=\"btn btn-primary  m-4\">Clear Text</button> \r\n        \r\n        </div>\r\n\r\n\r\n        <div className=\"container mt-3\">\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length } Words and {text.length} Characters</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length } Minutes to read.</p>\r\n\r\n            <h1>Preview</h1>\r\n            <p>{text.length>0?text:\"Nothing to Preview\"}</p>\r\n        </div>\r\n\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n  return (\r\n\r\n    <div style={{height:'50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong>  :  {props.alert.msg} </div> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React,{useState} from 'react';\nimport Alert from './Components/Alert';\n\n\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n\n  const toggleMode = () =>{\n    if (mode === 'light') {\n\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert('Dark Mode has been enabled','success');\n      // document.title = 'Furjad Khursheed - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light Mode has been enabled','success');\n      // document.title = 'Furjad Khursheed - Light Mode';\n    }\n\n  }\n\n  return (\n    <>\n\n    <Router>\n        <Navbar title=\"Furjad\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert}/>\n\n        <div className=\"container my-3\">\n        <Routes>\n          <Route exact path=\"about/\" element={<About />} />\n          <Route exact path=\"/\" element={ <TextForm showAlert={showAlert} heading=\"Enter Text to Analyze Below\" />} />\n        </Routes>\n        </div>\n      </Router>\n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}